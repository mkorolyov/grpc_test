// Code generated by protoc-gen-go. DO NOT EDIT.
// source: todo_service.proto

/*
Package v1 is a generated protocol buffer package.

It is generated from these files:
	todo_service.proto

It has these top-level messages:
	ToDo
	CreateRequest
	CreateResponse
*/
package v1

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import google_protobuf "github.com/golang/protobuf/ptypes/timestamp"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// Taks we have to do
type ToDo struct {
	// Unique integer identifier of the todo task
	Id int64 `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	// Title of the task
	Title string `protobuf:"bytes,2,opt,name=title" json:"title,omitempty"`
	// Detail description of the todo task
	Description string `protobuf:"bytes,3,opt,name=description" json:"description,omitempty"`
	// Date and time to remind the todo task
	Reminder *google_protobuf.Timestamp `protobuf:"bytes,4,opt,name=reminder" json:"reminder,omitempty"`
}

func (m *ToDo) Reset()                    { *m = ToDo{} }
func (m *ToDo) String() string            { return proto.CompactTextString(m) }
func (*ToDo) ProtoMessage()               {}
func (*ToDo) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *ToDo) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *ToDo) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *ToDo) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *ToDo) GetReminder() *google_protobuf.Timestamp {
	if m != nil {
		return m.Reminder
	}
	return nil
}

// Request data to create new todo task
type CreateRequest struct {
	// Task entity to add
	ToDo *ToDo `protobuf:"bytes,2,opt,name=toDo" json:"toDo,omitempty"`
}

func (m *CreateRequest) Reset()                    { *m = CreateRequest{} }
func (m *CreateRequest) String() string            { return proto.CompactTextString(m) }
func (*CreateRequest) ProtoMessage()               {}
func (*CreateRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *CreateRequest) GetToDo() *ToDo {
	if m != nil {
		return m.ToDo
	}
	return nil
}

// Contains data of created todo task
type CreateResponse struct {
	// ID of created task
	Id int64 `protobuf:"varint,2,opt,name=id" json:"id,omitempty"`
}

func (m *CreateResponse) Reset()                    { *m = CreateResponse{} }
func (m *CreateResponse) String() string            { return proto.CompactTextString(m) }
func (*CreateResponse) ProtoMessage()               {}
func (*CreateResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *CreateResponse) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func init() {
	proto.RegisterType((*ToDo)(nil), "v1.ToDo")
	proto.RegisterType((*CreateRequest)(nil), "v1.CreateRequest")
	proto.RegisterType((*CreateResponse)(nil), "v1.CreateResponse")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for ToDoService service

type ToDoServiceClient interface {
	// Create new todo task
	Create(ctx context.Context, in *CreateRequest, opts ...grpc.CallOption) (*CreateResponse, error)
}

type toDoServiceClient struct {
	cc *grpc.ClientConn
}

func NewToDoServiceClient(cc *grpc.ClientConn) ToDoServiceClient {
	return &toDoServiceClient{cc}
}

func (c *toDoServiceClient) Create(ctx context.Context, in *CreateRequest, opts ...grpc.CallOption) (*CreateResponse, error) {
	out := new(CreateResponse)
	err := grpc.Invoke(ctx, "/v1.ToDoService/Create", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for ToDoService service

type ToDoServiceServer interface {
	// Create new todo task
	Create(context.Context, *CreateRequest) (*CreateResponse, error)
}

func RegisterToDoServiceServer(s *grpc.Server, srv ToDoServiceServer) {
	s.RegisterService(&_ToDoService_serviceDesc, srv)
}

func _ToDoService_Create_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ToDoServiceServer).Create(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/v1.ToDoService/Create",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ToDoServiceServer).Create(ctx, req.(*CreateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _ToDoService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "v1.ToDoService",
	HandlerType: (*ToDoServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Create",
			Handler:    _ToDoService_Create_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "todo_service.proto",
}

func init() { proto.RegisterFile("todo_service.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 249 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x54, 0x90, 0xc1, 0x6a, 0xeb, 0x30,
	0x10, 0x45, 0xb1, 0xe3, 0x17, 0xf2, 0xc6, 0x34, 0xd0, 0xa1, 0x0b, 0x63, 0x0a, 0x35, 0x5e, 0x79,
	0x53, 0x99, 0xb8, 0xd0, 0x65, 0x37, 0xcd, 0x17, 0xb8, 0xd9, 0x97, 0x24, 0x9a, 0x06, 0x41, 0xec,
	0x71, 0xa5, 0x89, 0x3f, 0xa1, 0xdf, 0x5d, 0x2c, 0xd5, 0x25, 0x5d, 0xea, 0xea, 0x68, 0xe6, 0x5c,
	0x01, 0x0a, 0x6b, 0x7e, 0x77, 0x64, 0x47, 0x73, 0x24, 0x35, 0x58, 0x16, 0xc6, 0x78, 0xdc, 0xe4,
	0x0f, 0x27, 0xe6, 0xd3, 0x99, 0x6a, 0x9f, 0x1c, 0x2e, 0x1f, 0xb5, 0x98, 0x8e, 0x9c, 0xec, 0xbb,
	0x21, 0x40, 0xe5, 0x57, 0x04, 0xc9, 0x8e, 0xb7, 0x8c, 0x6b, 0x88, 0x8d, 0xce, 0xa2, 0x22, 0xaa,
	0x16, 0x6d, 0x6c, 0x34, 0xde, 0xc1, 0x3f, 0x31, 0x72, 0xa6, 0x2c, 0x2e, 0xa2, 0xea, 0x7f, 0x1b,
	0x0e, 0x58, 0x40, 0xaa, 0xc9, 0x1d, 0xad, 0x19, 0xc4, 0x70, 0x9f, 0x2d, 0xfc, 0xdd, 0x75, 0x84,
	0xcf, 0xb0, 0xb2, 0xd4, 0x99, 0x5e, 0x93, 0xcd, 0x92, 0x22, 0xaa, 0xd2, 0x26, 0x57, 0x41, 0x42,
	0xcd, 0x12, 0x6a, 0x37, 0x4b, 0xb4, 0xbf, 0x6c, 0xf9, 0x08, 0x37, 0xaf, 0x96, 0xf6, 0x42, 0x2d,
	0x7d, 0x5e, 0xc8, 0x09, 0xde, 0x43, 0x22, 0xbc, 0x65, 0xbf, 0x3f, 0x6d, 0x56, 0x6a, 0xdc, 0xa8,
	0x49, 0xb4, 0xf5, 0x69, 0x59, 0xc0, 0x7a, 0xc6, 0xdd, 0xc0, 0xbd, 0xa3, 0x9f, 0x02, 0xf1, 0x5c,
	0xa0, 0x79, 0x81, 0x74, 0xe2, 0xdf, 0xc2, 0x9f, 0x60, 0x0d, 0xcb, 0xf0, 0x00, 0x6f, 0xa7, 0x51,
	0x7f, 0x76, 0xe5, 0x78, 0x1d, 0x85, 0x79, 0x87, 0xa5, 0xd7, 0x7d, 0xfa, 0x0e, 0x00, 0x00, 0xff,
	0xff, 0x06, 0xad, 0xe3, 0x2d, 0x5b, 0x01, 0x00, 0x00,
}
